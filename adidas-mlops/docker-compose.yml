version: '3.8'

services:
  # FastAPI Backend Service
  api:
    build: .
    container_name: adidas-profit-api
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./src:/app/src
      - ./api:/app/api
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
    command: python api/main.py
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - adidas-network

  # Streamlit Dashboard Service
  dashboard:
    build: .
    container_name: adidas-profit-dashboard
    ports:
      - "8501:8501"
    volumes:
      - ./streamlit_app:/app/streamlit_app
    environment:
      - PYTHONPATH=/app
      - API_BASE_URL=http://api:8000
    command: streamlit run streamlit_app/app.py --server.address 0.0.0.0 --server.port 8501
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - adidas-network

  # Optional: Jupyter Notebook Service for Development
  notebook:
    build: .
    container_name: adidas-profit-notebook
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/app/notebooks
      - ./data:/app/data
      - ./models:/app/models
      - ./src:/app/src
    environment:
      - PYTHONPATH=/app
    command: jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
    restart: unless-stopped
    networks:
      - adidas-network

networks:
  adidas-network:
    driver: bridge

volumes:
  models_data:
  app_logs: